@model EcommerceStore.Models.Product
@{
    ViewData["Title"] = "Product Details";
    var relatedProducts = ViewBag.RelatedProducts as List<EcommerceStore.Models.Product>;
    bool isInWishlist = ViewBag.IsInWishlist != null && (bool)ViewBag.IsInWishlist;
    var avgRating = Model.Reviews.Any() ? Math.Round(Model.Reviews.Average(r => r.Rating)) : 0;

}

<div class="row mt-4">
    <!-- ✅ Image Gallery -->
    <div class="col-md-5">
        <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <img src="@(string.IsNullOrEmpty(Model.ImageUrl) ? "/images/no-image.png" : Model.ImageUrl)"
                         class="d-block w-100 rounded shadow-sm" alt="@Model.Name">
                </div>
                @if (Model.Images != null && Model.Images.Any())
                {
                    foreach (var img in Model.Images)
                    {
                        <div class="carousel-item">
                            <img src="@img.ImageUrl" class="d-block w-100 rounded shadow-sm" alt="@Model.Name">
                        </div>
                    }
                }
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                <span class="carousel-control-prev-icon"></span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                <span class="carousel-control-next-icon"></span>
            </button>
        </div>
    </div>

    <!-- Product Info -->
    <div class="col-md-7">
        <h2>@Model.Name</h2>
        <p class="text-muted">Category: @Model.Category?.Name</p>

        <!-- ✅ Badges -->
        @if (Model.Stock <= 3)
        {
            <span class="badge bg-warning text-dark me-2">Low Stock</span>
        }
        @if (Model.CreatedAt > DateTime.UtcNow.AddDays(-7))
        {
            <span class="badge bg-success me-2">New</span>
        }
        @if (Model.DiscountPrice.HasValue)
        {
            <span class="badge bg-danger me-2">On Sale</span>
        }

        <!-- ✅ Price -->
        <h4 class="mt-2">
            @if (Model.DiscountPrice.HasValue && Model.DiscountPrice < Model.Price)
            {
                <span class="text-muted text-decoration-line-through">@Model.Price.ToString("C")</span>
                <span class="fw-bold text-danger ms-2">@Model.DiscountPrice.Value.ToString("C")</span>
            }
            else
            {
                <span class="text-success fw-bold">@Model.Price.ToString("C")</span>
            }
        </h4>
        @if (Model.Reviews != null && Model.Reviews.Any())
        {
            <p class="text-warning">
                @for (int i = 1; i <= 5; i++)
                {
                    if (i <= avgRating)
                    {
                        @:<span>★</span> <!-- Filled -->
                    }
                    else
                    {
                        @:<span style="color: #ccc;">☆</span> <!-- Empty -->
                    }
                }
                <small class="text-muted">
                    (@Model.Reviews.Count() reviews)
                </small>
            </p>
        }
        else
        {
            <p class="text-muted">No reviews yet</p>
        }

        <p class="mt-3">@Model.Description</p>
        @if (Model.Stock > 0)
        {
            <div class="alert alert-success p-2">
                ✅ In Stock: @Model.Stock available
            </div>
        }
        else
        {
            <div class="alert alert-danger p-2">
                ❌ Out of Stock
            </div>
        }

        <div class="mt-3">
            @if (Model.Stock > 0)
            {
                <a asp-controller="Cart" asp-action="AddToCart" asp-route-productId="@Model.Id"
                   class="btn btn-primary btn-lg">
                    Add to Cart
                </a>
            }
            else
            {
                <button class="btn btn-secondary btn-lg" disabled>Out of Stock</button>
            }
            <a asp-action="Index" class="btn btn-secondary btn-lg">Back to Store</a>
            <form asp-controller="Wishlist" asp-action="@(isInWishlist ? "RemoveByProduct" : "Add")" method="post" class="d-inline">
                <input type="hidden" name="productId" value="@Model.Id" />
                <button type="submit" class="btn @(isInWishlist ? "btn-danger" : "btn-outline-danger") btn-sm">
                    @(isInWishlist ? "💔 Remove from Wishlist" : "❤️ Add to Wishlist")
                </button>
            </form>
        </div>
    </div>
</div>

<!-- ✅ Related Products Section -->
@if (relatedProducts != null && relatedProducts.Any())
{
    <hr class="my-4" />
    <h4>Related Products</h4>
    <div class="row">
        @foreach (var rp in relatedProducts)
        {
            <div class="col-md-3 col-sm-6 mb-4">
                <div class="card h-100">
                    <img src="@(string.IsNullOrEmpty(rp.ImageUrl) ? "/images/no-image.png" : rp.ImageUrl)"
                         class="card-img-top" alt="@rp.Name">
                    <div class="card-body text-center">
                        <h6>@rp.Name</h6>
                        <p class="text-success">@rp.Price.ToString("C")</p>
                        <a asp-action="Details" asp-route-id="@rp.Id" class="btn btn-outline-primary btn-sm">View</a>
                    </div>
                </div>
            </div>
        }
    </div>
}

<hr />
<h4>Customer Reviews</h4>

@if (Model.Reviews != null && Model.Reviews.Any())
{
    <p>
        <strong>Average Rating:</strong>
        ⭐ @Model.Reviews.Average(r => r.Rating).ToString("0.0")
        ( @Model.Reviews.Count() reviews )
    </p>
    <ul class="list-group mb-3">
        @foreach (var review in Model.Reviews.OrderByDescending(r => r.CreatedAt))
        {
            <li class="list-group-item">
                <strong>@(review.User != null ? review.User.FullName : "Unknown User")</strong>

                <span class="text-warning">⭐ @review.Rating</span>
                <br />
                <small class="text-muted">@review.CreatedAt.ToLocalTime()</small>
                <p>@review.Comment</p>

                @if (User.IsInRole("Admin") || User.IsInRole("SuperAdmin"))
                {
                    <form asp-controller="Review" asp-action="Delete" method="post" class="d-inline">
                        <input type="hidden" name="id" value="@review.Id" />
                        <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                    </form>
                }
            </li>
        }
    </ul>
}
else
{
    <p>No reviews yet. Be the first to review!</p>
}

@if (User.Identity.IsAuthenticated)
{
    <form asp-controller="Review" asp-action="Add" method="post">
        <input type="hidden" name="productId" value="@Model.Id" />
        <div class="mb-2">
            <label>Rating (1-5)</label>
            <select name="rating" class="form-select" required>
                <option value="5">⭐ 5</option>
                <option value="4">⭐ 4</option>
                <option value="3">⭐ 3</option>
                <option value="2">⭐ 2</option>
                <option value="1">⭐ 1</option>
            </select>
        </div>
        <div class="mb-2">
            <label>Comment</label>
            <textarea name="comment" class="form-control" rows="3" required></textarea>
        </div>
        <button type="submit" class="btn btn-primary">Submit Review</button>
    </form>
}
else
{
    <p><a asp-controller="Account" asp-action="Login">Login</a> to leave a review.</p>
}
